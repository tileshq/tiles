{"slug":"bhelx/eval-js","meta":{"schema":{"name":"eval-js","description":"Evaluate some javascript using `eval()` in a sandbox.","inputSchema":{"type":"object","required":["code"],"properties":{"code":{"type":"string","description":"The javascript code to eval. This code gets passed into `eval()` and the result is stringified. Do not use console.log to emit the result."}}}},"description":"# JavaScript Eval Servlet\n\nA simple servlet that evaluates JavaScript code in a QuickJS Wasm sandbox and returns the result.\n\n## What it does\n\nTakes JavaScript code as input, evaluates it using `eval()`, and returns the result as a string.\n\n## Usage\n\nCall with:\n```typescript\n{\n  arguments: {\n    code: \"2 + 2\"  // Required: JavaScript code to evaluate\n  }\n}\n```\n\nReturns:\n```typescript\n\"4\"\n```\n\nNote: Don't use `console.log()` in the code - the result needs to be returned directly.\n","requirements":{"v0":{"configs":[],"network":{"required":false},"filesystem":{"required":false}}},"lastContentAddress":"DNJ7UhQ2VpRtEPSYOlwtGO6B7vdMF-yEXBGhhiolX5g"},"installation_count":71,"visibility":"public","created_at":"2024-12-11T00:54:11.710Z","modified_at":"2024-12-13T19:44:46.834Z"},{"slug":"bhelx/eval-js","meta":{"schema":{"name":"eval-js","description":"Evaluate some javascript using `eval()` in a sandbox.","inputSchema":{"type":"object","required":["code"],"properties":{"code":{"type":"string","description":"The javascript code to eval. This code gets passed into `eval()` and the result is stringified. Do not use console.log to emit the result."}}}},"description":"# JavaScript Eval Servlet\n\nA simple servlet that evaluates JavaScript code in a QuickJS Wasm sandbox and returns the result.\n\n## What it does\n\nTakes JavaScript code as input, evaluates it using `eval()`, and returns the result as a string.\n\n## Usage\n\nCall with:\n```typescript\n{\n  arguments: {\n    code: \"2 + 2\"  // Required: JavaScript code to evaluate\n  }\n}\n```\n\nReturns:\n```typescript\n\"4\"\n```\n\nNote: Don't use `console.log()` in the code - the result needs to be returned directly.\n","requirements":{"v0":{"configs":[],"network":{"required":false},"filesystem":{"required":false}}},"lastContentAddress":"DNJ7UhQ2VpRtEPSYOlwtGO6B7vdMF-yEXBGhhiolX5g"},"installation_count":71,"visibility":"public","created_at":"2024-12-11T00:54:11.710Z","modified_at":"2024-12-13T19:44:46.834Z"},{"slug":"bhelx/fetch","meta":{"schema":{"tools":[{"name":"fetch","description":"Enables to open and access arbitrary text URLs. Fetches the contents of a URL and returns its contents converted to markdown","inputSchema":{"type":"object","required":["url"],"properties":{"url":{"type":"string","description":"The URL to fetch"}}}},{"name":"fetch-image","description":"Enables to read images URLs. Fetches the contents of a URL pointing to an image and returns its contents converted to base64","inputSchema":{"type":"object","properties":{"url":{"type":"string","description":"The URL of the image to fetch"},"mime-type":{"type":"string","description":"The mime type to filter by, it must be of the form image/png, image/jpeg, etc. If the URL ends with an image extension, it should match with the mime type (e.g. if the URL ends with .png, the mime type should be image/png, if the URL ends with .jpg,the mime type should be image/jpeg, if the URL ends with .gif, the mime type should be image/gif, etc.).\n                            If the mime-type is not provided it will default to image/png"}}}}]},"description":"# Fetch Servlet\n\nA servlet that fetches web pages and converts them to markdown.\n\n## What it does\n\nTakes a URL, fetches the page content, strips out scripts and styles, and converts the HTML to markdown format.\n\n## Usage\n\nCall with:\n```typescript\n{\n  arguments: {\n    url: \"https://example.com\"  // Required: URL to fetch\n  }\n}\n```\n\nReturns the page content converted to markdown format.","requirements":{"v0":{"configs":[],"network":{"domains":["*"],"required":true},"filesystem":{"required":false}}},"lastContentAddress":"SUyAlcSiwPBcmMvmX-9zsIMeErKLkbBd-zNIFGIvBTM"},"installation_count":157,"visibility":"public","created_at":"2024-12-11T00:25:23.187Z","modified_at":"2025-03-14T17:02:37.714Z"}]