{"openapi":"3.0.0","info":{"title":"mcp.run HTTP API","description":"The public API for mcp.run","version":"1.0.0"},"components":{"securitySchemes":{"cookie":{"type":"apiKey","in":"cookie","name":"sessionId"}},"schemas":{"NotFoundError":{"type":"object","properties":{"message":{"type":"string"},"correlation":{"type":"string"},"applicationErrorCode":{"type":"number"}},"required":["message"]},"BadRequestError":{"type":"object","properties":{"message":{"type":"string"},"correlation":{"type":"string"},"applicationErrorCode":{"type":"number"},"errors":{"type":"array","items":{"type":"object","properties":{"instancePath":{"type":"string"},"schemaPath":{"type":"string"},"keyword":{"type":"string"},"message":{"type":"string"}},"additionalProperties":true}}},"required":["message"]},"UnauthorizedError":{"type":"object","properties":{"message":{"type":"string"},"correlation":{"type":"string"},"applicationErrorCode":{"type":"number"}},"required":["message"]},"ForbiddenError":{"type":"object","properties":{"message":{"type":"string"},"correlation":{"type":"string"},"applicationErrorCode":{"type":"number"}},"required":["message"]},"UserItem":{"type":"object","properties":{"username":{"type":"string"},"meta":{"type":"object","properties":{"xtpLink":{"type":"string"},"xtp":{"type":"boolean"}}}}},"UserItemList":{"type":"array","items":{"$ref":"#/components/schemas/UserItem"},"description":"A list of UserItem. Previous and next pages, if available, are represented as the Link headers rel=\"next\" and rel=\"prev\" respectively"},"Profile":{"type":"object","description":"In mcp.run, users install servlets into one of many **Profiles** they\nmanage. A profile is identified by a slug and every user always has a \"default\"\nprofile. Profiles may be public, where they serve as \"starter packs\" of tools.","properties":{"username":{"type":"string"},"slug":{"type":"string","minLength":1},"description":{"type":"string"},"is_public":{"type":"boolean"},"created_at":{"type":"string","format":"date-time"},"modified_at":{"type":"string","format":"date-time"}}},"ProfileList":{"type":"array","items":{"$ref":"#/components/schemas/Profile"},"description":"A list of Profile. Previous and next pages, if available, are represented as the Link headers rel=\"next\" and rel=\"prev\" respectively"},"Run":{"type":"object","description":"A run represents the execution of a Task.","properties":{"name":{"type":"string"},"status":{"type":"string","enum":["pending","running","ready","failed"]},"results":{"type":"array","items":{"type":"object","additionalProperties":true}},"created_at":{"type":"string","format":"date-time"},"modified_at":{"type":"string","format":"date-time"}}},"RunList":{"type":"array","items":{"$ref":"#/components/schemas/Run"},"description":"A list of Run. Previous and next pages, if available, are represented as the Link headers rel=\"next\" and rel=\"prev\" respectively"},"Task":{"type":"object","description":"A task represents a unit of work that can be scheduled\nto execute externally. A task is associated with a profile which\ngives it the ability to use servlet tools installed to that\nprofile.","properties":{"name":{"type":"string"},"slug":{"type":"string"},"prompt":{"type":"string"},"settings":{"type":"object","additionalProperties":true},"created_at":{"type":"string","format":"date-time"},"modified_at":{"type":"string","format":"date-time"},"schedule":{"type":["null","object"],"properties":{"cron_expression":{"type":"string"},"specification":{"type":"string"},"parameters":{"type":"object","additionalProperties":true},"timezone":{"type":"string"}},"required":["specification","cron_expression"]},"provider":{"type":"object","properties":{"slug":{"type":"string"},"type":{"type":"string","enum":["anthropic","openai","dylibso"]},"settings":{"type":"object","properties":{"model":{"type":"string"}},"additionalProperties":true},"secrets":{"type":"object","properties":{"key":{"type":"string"}},"additionalProperties":true}}}},"required":["name","slug","prompt","created_at","modified_at"]},"TaskList":{"type":"array","description":"A list of Tasks.","items":{"type":"object","description":"A task represents a unit of work that can be scheduled\nto execute externally. A task is associated with a profile which\ngives it the ability to use servlet tools installed to that\nprofile.","properties":{"name":{"type":"string"},"slug":{"type":"string"},"prompt":{"type":"string"},"settings":{"type":"object","additionalProperties":true},"created_at":{"type":"string","format":"date-time"},"modified_at":{"type":"string","format":"date-time"},"schedule":{"type":["null","object"],"properties":{"cron_expression":{"type":"string"},"specification":{"type":"string"},"parameters":{"type":"object","additionalProperties":true},"timezone":{"type":"string"}},"required":["specification","cron_expression"]},"provider":{"type":"object","properties":{"slug":{"type":"string"},"type":{"type":"string","enum":["anthropic","openai","dylibso"]},"settings":{"type":"object","properties":{"model":{"type":"string"}},"additionalProperties":true},"secrets":{"type":"object","properties":{"key":{"type":"string"}},"additionalProperties":true}}}}}},"Servlet":{"type":"object","properties":{"slug":{"type":"string"},"meta":{"type":"object","additionalProperties":true},"installation_count":{"type":"number"},"visibility":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"modified_at":{"type":"string","format":"date-time"},"oauth_client":{"oneOf":[{"type":"object","properties":{"pkce":{"type":"boolean"},"id":{"type":"string"},"scopes":{"type":"array","items":{"type":"string"}},"authorizeUrl":{"type":"string"},"tokenUrl":{"type":"string"},"revokeUrl":{"type":"string"},"config_name":{"type":"string"}},"required":["authorizeUrl","tokenUrl","id","secret","scopes","config_name"]},{"type":"null"}]},"has_client":{"type":"boolean"}}},"ServletList":{"type":"array","items":{"$ref":"#/components/schemas/Servlet"},"description":"A list of Servlet. Previous and next pages, if available, are represented as the Link headers rel=\"next\" and rel=\"prev\" respectively"},"Binding":{"type":"object","properties":{"id":{"type":"string"},"updatedAt":{"type":"string","format":"date-time"},"contentAddress":{"type":"string","pattern":"^[A-Za-z0-9-_]{43}$","minLength":43,"maxLength":43}}},"Installation":{"type":"object","properties":{"name":{"type":"string"},"settings":{"type":"object","additionalProperties":true},"binding":{"$ref":"#/components/schemas/Binding"},"servlet":{"$ref":"#/components/schemas/Servlet"},"created_at":{"type":"string","format":"date-time"},"modified_at":{"type":"string","format":"date-time"}},"required":["name","settings","created_at","modified_at"]},"ProfileInstallations":{"type":"object","properties":{"installs":{"type":"array","items":{"$ref":"#/components/schemas/Installation"}}},"required":["installs"]},"OAuthInfo":{"type":"object","properties":{"config_name":{"type":"string"},"access_token":{"type":"string"}},"required":["config_name","access_token"]},"InstallationOAuth":{"type":"object","properties":{"oauth_info":{"$ref":"#/components/schemas/OAuthInfo"}},"required":["oauth_info"]},"CurrentUser":{"type":"object","properties":{"username":{"type":"string"},"emails":{"type":"array","items":{"type":"object","properties":{"email":{"type":"string"},"primary":{"type":"boolean"},"verified":{"type":"boolean"}}}},"meta":{"type":"object","properties":{"admin":{"type":"boolean"},"xtp":{"type":"boolean"},"xtpLink":{"type":["string","null"]}},"additionalProperties":true}},"required":["username","emails","meta"]},"Membership":{"type":"object","description":"A membership represents a user's association with an organization,\nincluding their roles within that organization.","properties":{"relationship":{"enum":["org","user"]},"roles":{"type":"array","items":{"type":"string"}},"created_at":{"type":"string","format":"date-time"},"modified_at":{"type":"string","format":"date-time"},"org":{"$ref":"#/components/schemas/UserItem"},"member":{"$ref":"#/components/schemas/UserItem"}},"required":["roles","created_at","modified_at"]},"MembershipList":{"type":"array","items":{"$ref":"#/components/schemas/Membership"}}}},"paths":{"/api/users/~":{"get":{"operationId":"getCurrentUser","summary":"Get current user","tags":["users"],"description":"Returns the current logged-in user, if any.","security":[{},{"cookie":[]}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CurrentUser"},{"type":"null"}]}}}}}}},"/api/auth/whoami":{"get":{"operationId":"whoami","summary":"Get current user","tags":["users"],"description":"Returns the current logged-in user, if any.","security":[{},{"cookie":[]}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CurrentUser"},{"type":"null"}]}}}}}}},"/api/logout":{"post":{"tags":["auth"],"responses":{"200":{"description":"Default Response"}}}},"/api/login/start":{"post":{"tags":["auth"],"responses":{"200":{"description":"Default Response"}}}},"/api/login/complete":{"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"}},"required":["code"]}}},"required":true},"responses":{"200":{"description":"Default Response"}}}},"/api/login/poll":{"get":{"tags":["auth"],"parameters":[{"schema":{"type":"string","pattern":"^[A-Za-z0-9-_]{43}$","minLength":43,"maxLength":43},"in":"query","name":"code","required":true}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","enum":["ok"]}}}}}},"202":{"description":"Default Response","content":{"application/json":{"schema":{"type":"object","properties":{"backoff":{"type":"number","description":"the number of seconds to wait until making the next poll request"}}}}}}}}},"/api/login/servlet/{scope}/{servlet}":{"get":{"tags":["auth"],"parameters":[{"schema":{"type":"string"},"in":"path","name":"scope","required":true},{"schema":{"type":"string"},"in":"path","name":"servlet","required":true}],"security":[{"cookie":[]}],"responses":{"200":{"description":"Default Response"}}}},"/api/login/{provider}":{"get":{"tags":["auth"],"parameters":[{"schema":{"type":"string"},"in":"query","name":"suggestedUsername","required":false},{"schema":{"type":"string"},"in":"query","name":"next","required":false},{"schema":{"type":"string","enum":["github","google"]},"in":"path","name":"provider","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/login/register":{"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"username":{"type":"string","pattern":"^[a-zA-Z]{1}[A-Za-z0-9_-]+$","minLength":1},"email":{"type":"string","pattern":".+@.+","minLength":3},"name":{"type":"string"}},"required":["username"]}}},"required":true},"responses":{"200":{"description":"Default Response"}}}},"/api/login/callback/{provider}":{"get":{"operationId":"oauthCallback","summary":"Finish oauth flow","tags":["auth"],"description":"Create a servlet or modify an existing servlet.","parameters":[{"schema":{"type":"string","enum":["github","google"]},"in":"path","name":"provider","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/mcp/sse/url":{"post":{"tags":["auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"activeProfile":{"type":"string","description":"the urlencoded slug of a profile (\"example/default\", \"foo%20bar/baz\")"},"expiresIn":{"type":"integer","description":"the number of seconds for which this url should be valid"}},"required":[]}}}},"security":[{"cookie":[]}],"responses":{"200":{"description":"Default Response"}}}},"/api/mcp/sse":{"get":{"tags":["auth"],"parameters":[{"schema":{"type":"string"},"in":"query","name":"profile","required":false},{"schema":{"type":"string","minLength":1},"in":"query","name":"nonce","required":false},{"schema":{"type":"string"},"in":"query","name":"username","required":false},{"schema":{"type":"integer"},"in":"query","name":"exp","required":false},{"schema":{"type":"string","pattern":"^[A-Za-z0-9-_]{43}$","minLength":1},"in":"query","name":"sig","required":false}],"security":[{"cookie":[]},{}],"responses":{"200":{"description":"Default Response"}}}},"/api/profiles":{"get":{"operationId":"listProfiles","summary":"List all public profiles.","tags":["profiles"],"description":"List public profiles.","responses":{"200":{"description":"A list of Profile. Previous and next pages, if available, are represented as the Link headers rel=\"next\" and rel=\"prev\" respectively","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileList"}}}}}}},"/api/profiles/{user}":{"get":{"operationId":"listUserProfiles","summary":"List profiles owned by user","tags":["profiles"],"description":"List all profiles owned by a user. Returns only public profiles\nif querying another user's profiles.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true,"description":"username"}],"security":[{"cookie":[]}],"responses":{"200":{"description":"A list of Profile. Previous and next pages, if available, are represented as the Link headers rel=\"next\" and rel=\"prev\" respectively","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileList"}}}}}}},"/api/profiles/{user}/{profile}":{"get":{"operationId":"getProfile","summary":"Get profile","tags":["profiles"],"description":"Get a specific profile.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"profile","required":true}],"security":[{},{"cookie":[]}],"responses":{"200":{"description":"In mcp.run, users install servlets into one of many **Profiles** they\nmanage. A profile is identified by a slug and every user always has a \"default\"\nprofile. Profiles may be public, where they serve as \"starter packs\" of tools.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Profile"}}}},"403":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenError"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}},"post":{"operationId":"createProfile","summary":"Create profile","tags":["profiles"],"description":"Create a new profile for the current user.\nProfile names must be at least one non-whitespace character long.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string"},"is_public":{"type":"boolean","default":false}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"profile","required":true}],"security":[{"cookie":[]}],"responses":{"201":{"description":"In mcp.run, users install servlets into one of many **Profiles** they\nmanage. A profile is identified by a slug and every user always has a \"default\"\nprofile. Profiles may be public, where they serve as \"starter packs\" of tools.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Profile"}}}},"400":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"403":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenError"}}}}}},"delete":{"operationId":"deleteProfile","summary":"Delete profile","tags":["profiles"],"description":"Delete a profile owned by the current user. Public profiles and\nthe user's \"default\" profile cannot be deleted.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"profile","required":true}],"security":[{"cookie":[]}],"responses":{"204":{"description":"Default Response"},"400":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}}}}},"/api/profiles/{user}/{profile}/installations/{installation}":{"delete":{"operationId":"uninstall","summary":"Uninstall servlet from profile","tags":["installations"],"description":"Uninstall a servlet from a profile. Use \"~\" as the username parameter to refer to the current user.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"profile","required":true},{"schema":{"type":"string"},"in":"path","name":"installation","required":true}],"security":[{"cookie":[]}],"responses":{"204":{"description":"Default Response"},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"403":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenError"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}}},"/api/profiles/{user}/{profile}/installations/{installation}/oauth":{"get":{"operationId":"getInstallationOAuth","summary":"Get oauth info for an install","tags":["installations"],"description":"Get oauth info for an install. Use \"~\" as the username parameter to refer to the current user.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"profile","required":true},{"schema":{"type":"string"},"in":"path","name":"installation","required":true}],"security":[{"cookie":[]}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/InstallationOAuth"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}}},"/api/profiles/{user}/{profile}/installations":{"get":{"operationId":"listProfileInstallations","summary":"List installed servlets on profile","tags":["installations"],"description":"Fetch all servlet installations for a profile. Respects `if-modified-since` headers.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"profile","required":true},{"schema":{"type":"string","pattern":"^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), [0123]\\d (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} [012]\\d:[0-6]\\d:[0-6]\\d GMT$"},"in":"header","name":"if-modified-since","required":false,"description":"If-modified-since in UTC format (`new Date().toUTCString()`; see [MDN](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since))"}],"security":[{},{"cookie":[]}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileInstallations"}}}},"301":{"description":"Default Response"},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}},"post":{"operationId":"installServlet","summary":"Install servlet to profile","tags":["installations"],"description":"Install a servlet to a profile owned by the current user or update an existing installation.\nUse \"~\" to refer to the current user.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","minLength":1,"maxLength":32},"servlet_slug":{"type":"string","pattern":"(%[A-Fa-f0-9]{2}|[\\w\\d_-])+/(%[A-Fa-f0-9]{2}|[\\w\\d_-])+","minLength":1},"allow_update":{"type":"boolean"},"settings":{"type":"object","properties":{"config":{"type":"object","additionalProperties":true},"network":{"type":"object","properties":{"enabled":{"type":"boolean"},"domains":{"type":"array","items":{"type":"string"}}}},"filesystem":{"type":"object","properties":{"enabled":{"type":"boolean"},"volumes":{"type":"object","additionalProperties":{"type":"string"}}}}}}},"required":["servlet_slug"]}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"profile","required":true}],"security":[{"cookie":[]}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Installation"}}}},"400":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}}},"/api/billing":{"post":{"operationId":"createBilling","summary":"Create a new billing account","tags":["billing"],"description":"Creates a new, billed account associated with the current user.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"email":{"type":"string"},"plan":{"type":"string","enum":["pro-monthly","pro-yearly","ent-monthly","ent-yearly"]},"stripe_subscriber_id":{"type":"string"}},"required":["name","email","stripe_subscriber_id","plan"]}}},"required":true},"security":[{"cookie":[]}],"responses":{"201":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserItem"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}}}}},"/api/memberships/{user}":{"get":{"operationId":"listOrgMemberships","summary":"List organization memberships","tags":["orgs"],"description":"Lists all memberships for a specific organization.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MembershipList"}}}}}}},"/api/memberships/{org}/{user}":{"put":{"operationId":"upsertOrgMembership","summary":"Create or update organization membership","tags":["orgs"],"description":"Creates or updates a membership for a user in an organization.\nRequires a valid organization code for verification.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string"}},"required":["code"]}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"org","required":true},{"schema":{"type":"string"},"in":"path","name":"user","required":true}],"responses":{"200":{"description":"A membership represents a user's association with an organization,\nincluding their roles within that organization.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Membership"}}}},"400":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}}}},"delete":{"operationId":"deleteOrgMembership","summary":"Delete organization membership","tags":["orgs"],"description":"Removes a user's membership from an organization.","parameters":[{"schema":{"type":"string"},"in":"path","name":"org","required":true},{"schema":{"type":"string"},"in":"path","name":"user","required":true}],"responses":{"204":{"description":"Default Response"},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}}},"/api/servlets":{"get":{"operationId":"listServlets","summary":"List servlets","tags":["servlets"],"description":"List all servlets (or search for a specific servlet.)","parameters":[{"schema":{"type":"string"},"in":"query","name":"q","required":false}],"responses":{"200":{"description":"A list of Servlet. Previous and next pages, if available, are represented as the Link headers rel=\"next\" and rel=\"prev\" respectively","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServletList"}}}}}},"post":{"operationId":"createServlet","summary":"Create servlet","tags":["servlets"],"description":"Create a servlet.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","minLength":1,"pattern":"[a-zA-Z](%[0-9A-F]{2}|[A-Za-z0-9_\\-\\.])+"},"user":{"type":"string"},"description":{"type":"string"},"meta":{"type":"object","additionalProperties":true},"visibility":{"type":"string","enum":["public","private"]},"oauth_client":{"type":"object","properties":{"pkce":{"type":"boolean"},"id":{"type":"string"},"secret":{"type":"string"},"scopes":{"type":"array","items":{"type":"string"},"minLength":0},"authorizeUrl":{"type":"string","format":"url"},"tokenUrl":{"type":"string","format":"url"},"revokeUrl":{"type":"string","format":"url"},"config_name":{"type":"string"}},"required":["authorizeUrl","tokenUrl","id","secret","config_name"]}},"required":["name","description"]}}},"required":true},"security":[{"cookie":[]}],"responses":{"400":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}},"2XX":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Servlet"}}}}}}},"/api/servlets/{user}/{name}":{"patch":{"operationId":"updateServlet","summary":"Update servlet","tags":["servlets"],"description":"Create a servlet or modify an existing servlet.","requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"description":{"type":"string"},"meta":{"type":"object","additionalProperties":true},"visibility":{"type":"string","enum":["public","private","blocked"]},"oauth_client":{"type":"object","properties":{"pkce":{"type":"boolean"},"id":{"type":"string"},"secret":{"type":"string"},"scopes":{"type":"array","items":{"type":"string"},"minLength":0},"authorizeUrl":{"type":"string"},"tokenUrl":{"type":"string"},"revokeUrl":{"type":"string"},"config_name":{"type":"string"}},"required":["authorizeUrl","tokenUrl","id","config_name"]}}}}}},"parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string","minLength":1},"in":"path","name":"name","required":true}],"security":[{"cookie":[]}],"responses":{"400":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"403":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenError"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}},"2XX":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Servlet"}}}}}},"get":{"operationId":"getServlet","summary":"Get servlet","tags":["servlets"],"description":"Get information about a specific servlet.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true,"description":"A user name. May be \"~\" to represent \"the current user's servlets\""},{"schema":{"type":"string"},"in":"path","name":"name","required":true}],"security":[{},{"cookie":[]}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Servlet"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}},"delete":{"operationId":"deleteServlet","summary":"Delete servlet","tags":["servlets"],"description":"Delete a servlet owned by the current user.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"name","required":true}],"security":[{"cookie":[]}],"responses":{"204":{"description":"Default Response"},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}}},"/api/servlets/{user}":{"get":{"summary":"List servlets owned by author","tags":["servlets"],"parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true,"description":"A user name. May be \"~\" to represent \"the current user's servlets\""}],"responses":{"200":{"description":"A list of Servlet. Previous and next pages, if available, are represented as the Link headers rel=\"next\" and rel=\"prev\" respectively","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ServletList"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}}},"/api/c/{addr}":{"get":{"operationId":"getContent","summary":"Fetch servlet content","tags":["servlets"],"description":"Fetch Servlet Wasm content by content address. Address is available in `Servlet.binding`.","parameters":[{"schema":{"type":"string","pattern":"^[A-Za-z0-9-_]{43}$","minLength":43,"maxLength":43},"in":"path","name":"addr","required":true}],"responses":{"200":{"description":"Default Response"}}}},"/api/users/{user}/tasks":{"get":{"operationId":"getUserTasks","summary":"Get tasks for a user","tags":["tasks"],"description":"List all tasks owned by a user, including their profiles.","parameters":[{"schema":{"type":"boolean"},"in":"query","name":"meta","required":false},{"schema":{"type":"string"},"in":"path","name":"user","required":true}],"security":[{"cookie":[]}],"responses":{"200":{"description":"A list of Tasks.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TaskList"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}}}}},"/api/model-providers/{user}":{"get":{"operationId":"listModelProviders","summary":"List model providers","tags":["model-providers"],"description":"List all model providers for the specified user.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true}],"security":[{"cookie":[]}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"slug":{"type":"string"},"type":{"type":"string","enum":["anthropic","openai","dylibso"]},"settings":{"type":"object","properties":{"model":{"type":"string"}}},"secrets":{"type":"object","properties":{"key":{"type":"string"}}},"config":{"type":"object","additionalProperties":true},"created_at":{"type":"string","format":"date-time"},"modified_at":{"type":"string","format":"date-time"}}}}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}}}}},"/api/model-providers/{user}/{name}":{"put":{"operationId":"upsertModelProvider","summary":"Create or update model provider","tags":["model-providers"],"description":"Create or update a model provider.","requestBody":{"content":{"application/json":{"schema":{"type":"object","required":["type","settings","secrets"],"properties":{"type":{"type":"string","enum":["anthropic","openai","dylibso"]},"secrets":{"type":"object","required":["key"],"properties":{"key":{"type":"string"}}},"settings":{"type":"object","properties":{"model":{"type":"string"}}}}}}},"required":true},"parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"name","required":true}],"security":[{"cookie":[]}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"type":"object","properties":{"slug":{"type":"string"},"type":{"type":"string"},"settings":{"type":"object","properties":{"model":{"type":"string"}}},"secrets":{"type":"object","properties":{"key":{"type":"string"}}},"created_at":{"type":"string","format":"date-time"},"modified_at":{"type":"string","format":"date-time"}}}}}},"400":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"403":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForbiddenError"}}}}}},"delete":{"operationId":"deleteModelProvider","summary":"Delete model provider","tags":["model-providers"],"description":"Delete a model provider. This will fail if there are any tasks still using this provider.","parameters":[{"schema":{"type":"string"},"in":"path","name":"user","required":true},{"schema":{"type":"string"},"in":"path","name":"name","required":true}],"security":[{"cookie":[]}],"responses":{"204":{"description":"Default Response"},"400":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}},"401":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UnauthorizedError"}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}},"409":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}}}}},"/api/partners/mintlify/onboard":{"post":{"operationId":"captureMintlifyData","summary":"Capture Mintlify data","tags":["partnerships"],"description":"Capture data from Mintlify integration","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"type":"object","properties":{"openapiUrl":{"type":"string"},"username":{"type":"string"}},"required":["openapiUrl"]}}},"required":true},"responses":{"302":{"description":"Redirect to onboarding page"},"400":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BadRequestError"}}}}}}},"/api/partners/mintlify/data":{"get":{"operationId":"getMintlifyData","summary":"Get Mintlify data","tags":["partnerships"],"description":"Retrieve data stored from Mintlify integration using a token","parameters":[{"schema":{"type":"string"},"in":"query","name":"token","required":true}],"responses":{"200":{"description":"Default Response","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"object","additionalProperties":true}}}}}},"404":{"description":"Default Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFoundError"}}}}}}}},"servers":[{"url":"https://www.mcp.run"}]}